/**
 * The following code is modified based on
 * https://github.com/nanobrowser/nanobrowser/blob/master/chrome-extension/src/background/agent/agents/validator.ts
 *
 * Apache-2.0 License
 * Copyright (c) 2024 alexchenzl
 * https://github.com/nanobrowser/nanobrowser/blob/master/LICENSE
 */
import { BaseAgent, type BaseAgentOptions, type ExtraAgentOptions } from './base';
import { z } from 'zod';
import { type AgentOutput } from '../types';
export declare const validatorOutputSchema: z.ZodObject<{
    is_valid: z.ZodBoolean;
    reason: z.ZodString;
    answer: z.ZodString;
}, "strip", z.ZodTypeAny, {
    is_valid: boolean;
    reason: string;
    answer: string;
}, {
    is_valid: boolean;
    reason: string;
    answer: string;
}>;
export type ValidatorOutput = z.infer<typeof validatorOutputSchema>;
export declare class ValidatorAgent extends BaseAgent<typeof validatorOutputSchema, ValidatorOutput> {
    private plan;
    constructor(options: BaseAgentOptions, extraOptions?: Partial<ExtraAgentOptions>);
    /**
     * Set the plan for the validator agent
     * @param plan - The plan to set
     */
    setPlan(plan: string | null): void;
    /**
     * Executes the validator agent
     * @returns AgentOutput<ValidatorOutput>
     */
    execute(): Promise<AgentOutput<ValidatorOutput>>;
}
//# sourceMappingURL=validator.d.ts.map