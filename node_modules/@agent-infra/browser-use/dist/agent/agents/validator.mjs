/**
* Copyright (c) 2025 Bytedance, Inc. and its affiliates.
* SPDX-License-Identifier: Apache-2.0
*/
import * as __WEBPACK_EXTERNAL_MODULE__base_mjs_f55655df__ from "./base.mjs";
import * as __WEBPACK_EXTERNAL_MODULE_zod__ from "zod";
import * as __WEBPACK_EXTERNAL_MODULE__types_mjs_686c9f1a__ from "../types.mjs";
import * as __WEBPACK_EXTERNAL_MODULE__event_types_mjs_5ce8fd1f__ from "../event/types.mjs";
import * as __WEBPACK_EXTERNAL_MODULE__langchain_core_messages_57fab301__ from "@langchain/core/messages";
import * as __WEBPACK_EXTERNAL_MODULE__utils_mjs_e798cd09__ from "../../utils.mjs";
import * as __WEBPACK_EXTERNAL_MODULE__errors_mjs_a5f03675__ from "./errors.mjs";
function _define_property(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
const logger = (0, __WEBPACK_EXTERNAL_MODULE__utils_mjs_e798cd09__.createLogger)('ValidatorAgent');
const validatorOutputSchema = __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
    is_valid: __WEBPACK_EXTERNAL_MODULE_zod__.z.boolean(),
    reason: __WEBPACK_EXTERNAL_MODULE_zod__.z.string(),
    answer: __WEBPACK_EXTERNAL_MODULE_zod__.z.string()
});
class ValidatorAgent extends __WEBPACK_EXTERNAL_MODULE__base_mjs_f55655df__.BaseAgent {
    setPlan(plan) {
        this.plan = plan;
    }
    async execute() {
        try {
            this.context.emitEvent(__WEBPACK_EXTERNAL_MODULE__event_types_mjs_5ce8fd1f__.Actors.VALIDATOR, __WEBPACK_EXTERNAL_MODULE__event_types_mjs_5ce8fd1f__.ExecutionState.STEP_START, 'Validating...');
            let stateMessage = await this.prompt.getUserMessage(this.context);
            if (this.plan) {
                const mergedMessage = new __WEBPACK_EXTERNAL_MODULE__langchain_core_messages_57fab301__.HumanMessage(`${stateMessage.content}\n\nThe current plan is: \n${this.plan}`);
                stateMessage = mergedMessage;
            }
            const systemMessage = this.prompt.getSystemMessage();
            const inputMessages = [
                systemMessage,
                stateMessage
            ];
            const modelOutput = await this.invoke(inputMessages);
            if (!modelOutput) throw new Error('Failed to validate task result');
            logger.info('validator output', JSON.stringify(modelOutput, null, 2));
            if (modelOutput.is_valid) this.context.emitEvent(__WEBPACK_EXTERNAL_MODULE__event_types_mjs_5ce8fd1f__.Actors.VALIDATOR, __WEBPACK_EXTERNAL_MODULE__event_types_mjs_5ce8fd1f__.ExecutionState.STEP_OK, modelOutput.answer);
            else {
                const msg = `The answer is not yet correct. ${modelOutput.reason}.`;
                this.context.emitEvent(__WEBPACK_EXTERNAL_MODULE__event_types_mjs_5ce8fd1f__.Actors.VALIDATOR, __WEBPACK_EXTERNAL_MODULE__event_types_mjs_5ce8fd1f__.ExecutionState.STEP_FAIL, msg);
                this.context.actionResults = [
                    new __WEBPACK_EXTERNAL_MODULE__types_mjs_686c9f1a__.ActionResult({
                        extractedContent: msg,
                        includeInMemory: true
                    })
                ];
            }
            return {
                id: this.id,
                result: modelOutput
            };
        } catch (error) {
            if ((0, __WEBPACK_EXTERNAL_MODULE__utils_mjs_e798cd09__.isAuthenticationError)(error)) throw new __WEBPACK_EXTERNAL_MODULE__errors_mjs_a5f03675__.ChatModelAuthError('Validator API Authentication failed. Please verify your API key', error);
            const errorMessage = error instanceof Error ? error.message : String(error);
            logger.error(`Validation failed: ${errorMessage}`);
            this.context.emitEvent(__WEBPACK_EXTERNAL_MODULE__event_types_mjs_5ce8fd1f__.Actors.VALIDATOR, __WEBPACK_EXTERNAL_MODULE__event_types_mjs_5ce8fd1f__.ExecutionState.STEP_FAIL, `Validation failed: ${errorMessage}`);
            return {
                id: this.id,
                error: `Validation failed: ${errorMessage}`
            };
        }
    }
    constructor(options, extraOptions){
        super(validatorOutputSchema, options, {
            ...extraOptions,
            id: 'validator'
        }), _define_property(this, "plan", null);
    }
}
export { ValidatorAgent, validatorOutputSchema };

//# sourceMappingURL=validator.mjs.map