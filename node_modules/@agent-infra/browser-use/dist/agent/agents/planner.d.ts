/**
 * The following code is modified based on
 * https://github.com/nanobrowser/nanobrowser/blob/master/chrome-extension/src/background/agent/agents/planner.ts
 *
 * Apache-2.0 License
 * Copyright (c) 2024 alexchenzl
 * https://github.com/nanobrowser/nanobrowser/blob/master/LICENSE
 */
import { BaseAgent, type BaseAgentOptions, type ExtraAgentOptions } from './base';
import { z } from 'zod';
import type { AgentOutput } from '../types';
export declare const plannerOutputSchema: z.ZodObject<{
    observation: z.ZodString;
    challenges: z.ZodString;
    done: z.ZodBoolean;
    next_steps: z.ZodString;
    reasoning: z.ZodString;
    web_task: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    done: boolean;
    observation: string;
    challenges: string;
    next_steps: string;
    reasoning: string;
    web_task: boolean;
}, {
    done: boolean;
    observation: string;
    challenges: string;
    next_steps: string;
    reasoning: string;
    web_task: boolean;
}>;
export type PlannerOutput = z.infer<typeof plannerOutputSchema>;
export declare class PlannerAgent extends BaseAgent<typeof plannerOutputSchema, PlannerOutput> {
    constructor(options: BaseAgentOptions, extraOptions?: Partial<ExtraAgentOptions>);
    execute(): Promise<AgentOutput<PlannerOutput>>;
}
//# sourceMappingURL=planner.d.ts.map