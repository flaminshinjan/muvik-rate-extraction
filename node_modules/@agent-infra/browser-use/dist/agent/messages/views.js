/**
* Copyright (c) 2025 Bytedance, Inc. and its affiliates.
* SPDX-License-Identifier: Apache-2.0
*/
"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    MessageHistory: ()=>MessageHistory
});
const messages_namespaceObject = require("@langchain/core/messages");
function _define_property(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
class MessageHistory {
    addMessage(message, metadata = {
        inputTokens: 0
    }, position) {
        const managedMessage = {
            message,
            metadata
        };
        if (void 0 === position) this.messages.push(managedMessage);
        else this.messages.splice(position, 0, managedMessage);
        this.totalTokens += metadata.inputTokens;
    }
    removeMessage(index = -1) {
        if (this.messages.length > 0) {
            const msg = this.messages.splice(index, 1)[0];
            this.totalTokens -= msg.metadata.inputTokens;
        }
    }
    removeLastHumanMessage() {
        if (this.messages.length > 2 && this.messages[this.messages.length - 1].message instanceof messages_namespaceObject.HumanMessage) {
            const msg = this.messages.pop();
            if (msg) this.totalTokens -= msg.metadata.inputTokens;
        }
    }
    constructor(){
        _define_property(this, "messages", []);
        _define_property(this, "totalTokens", 0);
    }
}
var __webpack_export_target__ = exports;
for(var __webpack_i__ in __webpack_exports__)__webpack_export_target__[__webpack_i__] = __webpack_exports__[__webpack_i__];
if (__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, '__esModule', {
    value: true
});

//# sourceMappingURL=views.js.map