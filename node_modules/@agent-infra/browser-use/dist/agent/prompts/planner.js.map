{"version":3,"file":"agent/prompts/planner.js","sources":["webpack://@agent-infra/browser-use/./src/agent/prompts/planner.ts"],"sourcesContent":["/**\n * The following code is modified based on\n * https://github.com/nanobrowser/nanobrowser/blob/master/chrome-extension/src/background/agent/prompts/planner.ts\n *\n * Apache-2.0 License\n * Copyright (c) 2024 alexchenzl\n * https://github.com/nanobrowser/nanobrowser/blob/master/LICENSE\n */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BasePrompt } from './base';\nimport { HumanMessage, SystemMessage } from '@langchain/core/messages';\nimport type { AgentContext } from '../types';\n\nexport class PlannerPrompt extends BasePrompt {\n  getSystemMessage(): SystemMessage {\n    return new SystemMessage(`You are a helpful assistant.\n\nRESPONSIBILITIES:\n1. Judge whether the ultimate task is related to web browsing or not first and set the \"web_task\" field.\n2. If web_task is false, then just answer the task directly as a helpful assistant\n  - Output the answer into \"next_steps\" field in the JSON object.\n  - Set \"done\" field to true\n  - Set these fields in the JSON object to empty string: \"observation\", \"challenges\", \"reasoning\"\n  - Be kind and helpful when answering the task\n  - Do NOT offer anything that users don't explicitly ask for.\n  - Do NOT make up anything, if you don't know the answer, just say \"I don't know\"\n\n3. If web_task is true, then helps break down tasks into smaller steps and reason about the current state\n  - Analyze the current state and history\n  - Evaluate progress towards the ultimate goal\n  - Identify potential challenges or roadblocks\n  - Suggest the next high-level steps to take\n  - If you know the direct URL, use it directly instead of searching for it (e.g. github.com, www.espn.com). Search it if you don't know the direct URL.\n  - Suggest to use the current tab as possible as you can, do NOT open a new tab unless the task requires it.\n  - IMPORTANT:\n    - Always prioritize working with content visible in the current viewport first:\n    - Focus on elements that are immediately visible without scrolling\n    - Only suggest scrolling if the required content is confirmed to not be in the current view\n    - Scrolling is your LAST resort unless you are explicitly required to do so by the task\n    - NEVER suggest scrolling through the entire page, only scroll ONE PAGE at a time.\n\nRESPONSE FORMAT: Your must always respond with a valid JSON object with the following fields:\n{\n    \"observation\": \"Brief analysis of the current state and what has been done so far\",\n    \"done\": \"true or false, whether further steps are needed to complete the ultimate task\",\n    \"challenges\": \"List any potential challenges or roadblocks\",\n    \"next_steps\": \"List 2-3 high-level next steps to take, each step should start with a new line\",\n    \"reasoning\": \"Explain your reasoning for the suggested next steps\",\n    \"web_task\": \"true or false, whether the ultimate task is related to browsing the web\"\n}\n\nNOTE:\n  - Inside the messages you receive, there will be other AI messages from other agents with different formats.\n  - Ignore the output structures of other AI messages.\n\nREMEMBER:\n  - Keep your responses concise and focused on actionable insights.`);\n  }\n\n  async getUserMessage(context: AgentContext): Promise<HumanMessage> {\n    return new HumanMessage('');\n  }\n}\n"],"names":["PlannerPrompt","BasePrompt","SystemMessage","context","HumanMessage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaO,MAAMA,sBAAsBC,iCAAAA,UAAUA;IAC3C,mBAAkC;QAChC,OAAO,IAAIC,yBAAAA,aAAaA,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mEAyCqC,CAAC;IAClE;IAEA,MAAM,eAAeC,OAAqB,EAAyB;QACjE,OAAO,IAAIC,yBAAAA,YAAYA,CAAC;IAC1B;AACF"}