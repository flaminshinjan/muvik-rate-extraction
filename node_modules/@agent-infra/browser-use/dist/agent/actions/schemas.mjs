/**
* Copyright (c) 2025 Bytedance, Inc. and its affiliates.
* SPDX-License-Identifier: Apache-2.0
*/
import * as __WEBPACK_EXTERNAL_MODULE_zod__ from "zod";
const doneActionSchema = {
    name: 'done',
    description: 'Complete task',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        text: __WEBPACK_EXTERNAL_MODULE_zod__.z.string()
    })
};
const searchGoogleActionSchema = {
    name: 'search_google',
    description: 'Search Google in the current tab',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        query: __WEBPACK_EXTERNAL_MODULE_zod__.z.string()
    })
};
const goToUrlActionSchema = {
    name: 'go_to_url',
    description: 'Navigate to URL in the current tab',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        url: __WEBPACK_EXTERNAL_MODULE_zod__.z.string()
    })
};
const goBackActionSchema = {
    name: 'go_back',
    description: 'Go back to the previous page',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({})
};
const clickElementActionSchema = {
    name: 'click_element',
    description: 'Click element',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        desc: __WEBPACK_EXTERNAL_MODULE_zod__.z.string().optional(),
        index: __WEBPACK_EXTERNAL_MODULE_zod__.z.number(),
        xpath: __WEBPACK_EXTERNAL_MODULE_zod__.z.string().optional()
    })
};
const inputTextActionSchema = {
    name: 'input_text',
    description: 'Input text into an interactive input element',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        desc: __WEBPACK_EXTERNAL_MODULE_zod__.z.string().optional(),
        index: __WEBPACK_EXTERNAL_MODULE_zod__.z.number(),
        text: __WEBPACK_EXTERNAL_MODULE_zod__.z.string(),
        xpath: __WEBPACK_EXTERNAL_MODULE_zod__.z.string().optional()
    })
};
const switchTabActionSchema = {
    name: 'switch_tab',
    description: 'Switch to tab by id',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        tab_id: __WEBPACK_EXTERNAL_MODULE_zod__.z.number()
    })
};
const openTabActionSchema = {
    name: 'open_tab',
    description: 'Open URL in new tab',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        url: __WEBPACK_EXTERNAL_MODULE_zod__.z.string()
    })
};
const extractContentActionSchema = {
    name: 'extract_content',
    description: "Extract page content to retrieve specific information from the page, e.g. all company names, a specifc description, all information about, links with companies in structured format or simply links",
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        goal: __WEBPACK_EXTERNAL_MODULE_zod__.z.string()
    })
};
const cacheContentActionSchema = {
    name: 'cache_content',
    description: 'Cache the extracted content of the page',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        content: __WEBPACK_EXTERNAL_MODULE_zod__.z.string()
    })
};
const scrollDownActionSchema = {
    name: 'scroll_down',
    description: 'Scroll down the page by pixel amount - if no amount is specified, scroll down one page',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        desc: __WEBPACK_EXTERNAL_MODULE_zod__.z.string().optional(),
        amount: __WEBPACK_EXTERNAL_MODULE_zod__.z.number().optional()
    })
};
const scrollUpActionSchema = {
    name: 'scroll_up',
    description: 'Scroll up the page by pixel amount - if no amount is specified, scroll up one page',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        desc: __WEBPACK_EXTERNAL_MODULE_zod__.z.string().optional(),
        amount: __WEBPACK_EXTERNAL_MODULE_zod__.z.number().optional()
    })
};
const sendKeysActionSchema = {
    name: 'send_keys',
    description: 'Send strings of special keys like Backspace, Insert, PageDown, Delete, Enter. Shortcuts such as `Control+o`, `Control+Shift+T` are supported as well. This gets used in keyboard press. Be aware of different operating systems and their shortcuts',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        desc: __WEBPACK_EXTERNAL_MODULE_zod__.z.string().optional(),
        keys: __WEBPACK_EXTERNAL_MODULE_zod__.z.string()
    })
};
const scrollToTextActionSchema = {
    name: 'scroll_to_text',
    description: 'If you dont find something which you want to interact with, scroll to it',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        desc: __WEBPACK_EXTERNAL_MODULE_zod__.z.string().optional(),
        text: __WEBPACK_EXTERNAL_MODULE_zod__.z.string()
    })
};
const getDropdownOptionsActionSchema = {
    name: 'get_dropdown_options',
    description: 'Get all options from a native dropdown',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        index: __WEBPACK_EXTERNAL_MODULE_zod__.z.number()
    })
};
const selectDropdownOptionActionSchema = {
    name: 'select_dropdown_option',
    description: 'Select dropdown option for interactive element index by the text of the option you want to select',
    schema: __WEBPACK_EXTERNAL_MODULE_zod__.z.object({
        index: __WEBPACK_EXTERNAL_MODULE_zod__.z.number(),
        text: __WEBPACK_EXTERNAL_MODULE_zod__.z.string()
    })
};
export { cacheContentActionSchema, clickElementActionSchema, doneActionSchema, extractContentActionSchema, getDropdownOptionsActionSchema, goBackActionSchema, goToUrlActionSchema, inputTextActionSchema, openTabActionSchema, scrollDownActionSchema, scrollToTextActionSchema, scrollUpActionSchema, searchGoogleActionSchema, selectDropdownOptionActionSchema, sendKeysActionSchema, switchTabActionSchema };

//# sourceMappingURL=schemas.mjs.map