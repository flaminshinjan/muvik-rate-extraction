{"version":3,"file":"agent/actions/schemas.mjs","sources":["webpack://@agent-infra/browser-use/./src/agent/actions/schemas.ts"],"sourcesContent":["/**\n * The following code is modified based on\n * https://github.com/nanobrowser/nanobrowser/blob/master/chrome-extension/src/background/agent/actions/schemas.ts\n *\n * Apache-2.0 License\n * Copyright (c) 2024 alexchenzl\n * https://github.com/nanobrowser/nanobrowser/blob/master/LICENSE\n */\nimport { z } from 'zod';\n\nexport interface ActionSchema {\n  name: string;\n  description: string;\n  schema: z.ZodType;\n}\n\nexport const doneActionSchema: ActionSchema = {\n  name: 'done',\n  description: 'Complete task',\n  schema: z.object({\n    text: z.string(),\n  }),\n};\n\n// Basic Navigation Actions\nexport const searchGoogleActionSchema: ActionSchema = {\n  name: 'search_google',\n  description: 'Search Google in the current tab',\n  schema: z.object({\n    query: z.string(),\n  }),\n};\n\nexport const goToUrlActionSchema: ActionSchema = {\n  name: 'go_to_url',\n  description: 'Navigate to URL in the current tab',\n  schema: z.object({\n    url: z.string(),\n  }),\n};\n\nexport const goBackActionSchema: ActionSchema = {\n  name: 'go_back',\n  description: 'Go back to the previous page',\n  schema: z.object({}),\n};\n\nexport const clickElementActionSchema: ActionSchema = {\n  name: 'click_element',\n  description: 'Click element',\n  schema: z.object({\n    desc: z.string().optional(), // some small LLM can not generate a description, so let it be optional (but it's still makred as required in json schema)\n    index: z.number(),\n    xpath: z.string().optional(),\n  }),\n};\n\nexport const inputTextActionSchema: ActionSchema = {\n  name: 'input_text',\n  description: 'Input text into an interactive input element',\n  schema: z.object({\n    desc: z.string().optional(),\n    index: z.number(),\n    text: z.string(),\n    xpath: z.string().optional(),\n  }),\n};\n\n// Tab Management Actions\nexport const switchTabActionSchema: ActionSchema = {\n  name: 'switch_tab',\n  description: 'Switch to tab by id',\n  schema: z.object({\n    tab_id: z.number(),\n  }),\n};\n\nexport const openTabActionSchema: ActionSchema = {\n  name: 'open_tab',\n  description: 'Open URL in new tab',\n  schema: z.object({\n    url: z.string(),\n  }),\n};\n\n// Content Actions\nexport const extractContentActionSchema: ActionSchema = {\n  name: 'extract_content',\n  description:\n    'Extract page content to retrieve specific information from the page, e.g. all company names, a specifc description, all information about, links with companies in structured format or simply links',\n  schema: z.object({\n    goal: z.string(),\n  }),\n};\n\n// Cache Actions\nexport const cacheContentActionSchema: ActionSchema = {\n  name: 'cache_content',\n  description: 'Cache the extracted content of the page',\n  schema: z.object({\n    content: z.string(),\n  }),\n};\n\nexport const scrollDownActionSchema: ActionSchema = {\n  name: 'scroll_down',\n  description:\n    'Scroll down the page by pixel amount - if no amount is specified, scroll down one page',\n  schema: z.object({\n    desc: z.string().optional(),\n    amount: z.number().optional(),\n  }),\n};\n\nexport const scrollUpActionSchema: ActionSchema = {\n  name: 'scroll_up',\n  description:\n    'Scroll up the page by pixel amount - if no amount is specified, scroll up one page',\n  schema: z.object({\n    desc: z.string().optional(),\n    amount: z.number().optional(),\n  }),\n};\n\nexport const sendKeysActionSchema: ActionSchema = {\n  name: 'send_keys',\n  description:\n    'Send strings of special keys like Backspace, Insert, PageDown, Delete, Enter. Shortcuts such as `Control+o`, `Control+Shift+T` are supported as well. This gets used in keyboard press. Be aware of different operating systems and their shortcuts',\n  schema: z.object({\n    desc: z.string().optional(),\n    keys: z.string(),\n  }),\n};\n\nexport const scrollToTextActionSchema: ActionSchema = {\n  name: 'scroll_to_text',\n  description:\n    'If you dont find something which you want to interact with, scroll to it',\n  schema: z.object({\n    desc: z.string().optional(),\n    text: z.string(),\n  }),\n};\n\nexport const getDropdownOptionsActionSchema: ActionSchema = {\n  name: 'get_dropdown_options',\n  description: 'Get all options from a native dropdown',\n  schema: z.object({\n    index: z.number(),\n  }),\n};\n\nexport const selectDropdownOptionActionSchema: ActionSchema = {\n  name: 'select_dropdown_option',\n  description:\n    'Select dropdown option for interactive element index by the text of the option you want to select',\n  schema: z.object({\n    index: z.number(),\n    text: z.string(),\n  }),\n};\n"],"names":["doneActionSchema","z","searchGoogleActionSchema","goToUrlActionSchema","goBackActionSchema","clickElementActionSchema","inputTextActionSchema","switchTabActionSchema","openTabActionSchema","extractContentActionSchema","cacheContentActionSchema","scrollDownActionSchema","scrollUpActionSchema","sendKeysActionSchema","scrollToTextActionSchema","getDropdownOptionsActionSchema","selectDropdownOptionActionSchema"],"mappings":";;;;;AAgBO,MAAMA,mBAAiC;IAC5C,MAAM;IACN,aAAa;IACb,QAAQC,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,MAAMA,gCAAAA,CAAAA,CAAAA,MAAQ;IAChB;AACF;AAGO,MAAMC,2BAAyC;IACpD,MAAM;IACN,aAAa;IACb,QAAQD,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,OAAOA,gCAAAA,CAAAA,CAAAA,MAAQ;IACjB;AACF;AAEO,MAAME,sBAAoC;IAC/C,MAAM;IACN,aAAa;IACb,QAAQF,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,KAAKA,gCAAAA,CAAAA,CAAAA,MAAQ;IACf;AACF;AAEO,MAAMG,qBAAmC;IAC9C,MAAM;IACN,aAAa;IACb,QAAQH,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC,CAAC;AACpB;AAEO,MAAMI,2BAAyC;IACpD,MAAM;IACN,aAAa;IACb,QAAQJ,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,MAAMA,gCAAAA,CAAAA,CAAAA,MAAQ,GAAG,QAAQ;QACzB,OAAOA,gCAAAA,CAAAA,CAAAA,MAAQ;QACf,OAAOA,gCAAAA,CAAAA,CAAAA,MAAQ,GAAG,QAAQ;IAC5B;AACF;AAEO,MAAMK,wBAAsC;IACjD,MAAM;IACN,aAAa;IACb,QAAQL,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,MAAMA,gCAAAA,CAAAA,CAAAA,MAAQ,GAAG,QAAQ;QACzB,OAAOA,gCAAAA,CAAAA,CAAAA,MAAQ;QACf,MAAMA,gCAAAA,CAAAA,CAAAA,MAAQ;QACd,OAAOA,gCAAAA,CAAAA,CAAAA,MAAQ,GAAG,QAAQ;IAC5B;AACF;AAGO,MAAMM,wBAAsC;IACjD,MAAM;IACN,aAAa;IACb,QAAQN,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,QAAQA,gCAAAA,CAAAA,CAAAA,MAAQ;IAClB;AACF;AAEO,MAAMO,sBAAoC;IAC/C,MAAM;IACN,aAAa;IACb,QAAQP,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,KAAKA,gCAAAA,CAAAA,CAAAA,MAAQ;IACf;AACF;AAGO,MAAMQ,6BAA2C;IACtD,MAAM;IACN,aACE;IACF,QAAQR,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,MAAMA,gCAAAA,CAAAA,CAAAA,MAAQ;IAChB;AACF;AAGO,MAAMS,2BAAyC;IACpD,MAAM;IACN,aAAa;IACb,QAAQT,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,SAASA,gCAAAA,CAAAA,CAAAA,MAAQ;IACnB;AACF;AAEO,MAAMU,yBAAuC;IAClD,MAAM;IACN,aACE;IACF,QAAQV,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,MAAMA,gCAAAA,CAAAA,CAAAA,MAAQ,GAAG,QAAQ;QACzB,QAAQA,gCAAAA,CAAAA,CAAAA,MAAQ,GAAG,QAAQ;IAC7B;AACF;AAEO,MAAMW,uBAAqC;IAChD,MAAM;IACN,aACE;IACF,QAAQX,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,MAAMA,gCAAAA,CAAAA,CAAAA,MAAQ,GAAG,QAAQ;QACzB,QAAQA,gCAAAA,CAAAA,CAAAA,MAAQ,GAAG,QAAQ;IAC7B;AACF;AAEO,MAAMY,uBAAqC;IAChD,MAAM;IACN,aACE;IACF,QAAQZ,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,MAAMA,gCAAAA,CAAAA,CAAAA,MAAQ,GAAG,QAAQ;QACzB,MAAMA,gCAAAA,CAAAA,CAAAA,MAAQ;IAChB;AACF;AAEO,MAAMa,2BAAyC;IACpD,MAAM;IACN,aACE;IACF,QAAQb,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,MAAMA,gCAAAA,CAAAA,CAAAA,MAAQ,GAAG,QAAQ;QACzB,MAAMA,gCAAAA,CAAAA,CAAAA,MAAQ;IAChB;AACF;AAEO,MAAMc,iCAA+C;IAC1D,MAAM;IACN,aAAa;IACb,QAAQd,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,OAAOA,gCAAAA,CAAAA,CAAAA,MAAQ;IACjB;AACF;AAEO,MAAMe,mCAAiD;IAC5D,MAAM;IACN,aACE;IACF,QAAQf,gCAAAA,CAAAA,CAAAA,MAAQ,CAAC;QACf,OAAOA,gCAAAA,CAAAA,CAAAA,MAAQ;QACf,MAAMA,gCAAAA,CAAAA,CAAAA,MAAQ;IAChB;AACF"}