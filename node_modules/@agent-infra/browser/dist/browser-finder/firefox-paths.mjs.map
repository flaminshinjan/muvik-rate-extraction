{"version":3,"file":"browser-finder/firefox-paths.mjs","sources":["webpack://@agent-infra/browser/./src/browser-finder/firefox-paths.ts"],"sourcesContent":["/**\n * The following code is modified based on\n * https://github.com/shirshak55/edge-paths/blob/master/index.ts\n *\n * MIT Licensed\n * Copyright (c) 2020 Shirshak\n * https://github.com/shirshak55/edge-paths/blob/master/LICENSE\n */\nimport { existsSync } from 'fs';\nimport { sep, join } from 'path';\nimport which from 'which';\n\nconst platform = process.platform;\n\nfunction getFirefoxOnLinux(name: 'firefox'): string | null {\n  try {\n    const path = which.sync(name);\n    return path;\n  } catch (e) {}\n\n  return null;\n}\n\nfunction getFirefoxOnWindows(\n  name: 'Mozilla Firefox' | 'Firefox Developer Edition' | 'Firefox Nightly',\n): string | null {\n  const suffix = `${sep}${name}${sep}firefox.exe`;\n\n  const prefixes = [\n    process.env.LOCALAPPDATA,\n    process.env.PROGRAMFILES,\n    process.env['PROGRAMFILES(X86)'],\n  ].filter(Boolean);\n\n  for (const prefix of prefixes) {\n    const firefoxPath = join(prefix!, suffix);\n    if (existsSync(firefoxPath)) {\n      return firefoxPath;\n    }\n  }\n\n  return null;\n}\n\nfunction getFireFoxOnDarwin(\n  name: 'Firefox' | 'Firefox Developer Edition' | 'Firefox Nightly',\n): string | null {\n  const suffix = `/Applications/${name}.app/Contents/MacOS/firefox`;\n  const prefixes = ['', process.env.HOME].filter((item) => item !== undefined);\n\n  for (const prefix of prefixes) {\n    const firefoxPath = join(prefix, suffix);\n    if (existsSync(firefoxPath)) {\n      return firefoxPath;\n    }\n  }\n\n  return null;\n}\n\nconst firefoxPaths = {\n  firefox: {\n    linux: () => getFirefoxOnLinux('firefox'), // stable/beta/dev/nightly use same 'firefox' app name\n    darwin: () => getFireFoxOnDarwin('Firefox'),\n    win32: () => getFirefoxOnWindows('Mozilla Firefox'),\n  },\n  // beta and stable use same file path\n  dev: {\n    darwin: () => getFireFoxOnDarwin('Firefox Developer Edition'),\n    win32: () => getFirefoxOnWindows('Firefox Developer Edition'),\n  },\n  nightly: {\n    darwin: () => getFireFoxOnDarwin('Firefox Nightly'),\n    win32: () => getFirefoxOnWindows('Firefox Nightly'),\n  },\n};\n\nfunction getFirefoxPath() {\n  const firefox = firefoxPaths.firefox;\n\n  if (platform && Object.keys(firefox).includes(platform)) {\n    const pth = firefox[platform as keyof typeof firefox]();\n    if (pth) {\n      return pth;\n    }\n  }\n}\n\nfunction getFirefoxDevPath() {\n  const dev = firefoxPaths.dev;\n\n  if (platform && Object.keys(dev).includes(platform)) {\n    const pth = dev[platform as keyof typeof dev]();\n    if (pth) {\n      return pth;\n    }\n  }\n}\n\nfunction getFirefoxNightlyPath() {\n  const nightly = firefoxPaths.nightly;\n\n  if (platform && Object.keys(nightly).includes(platform)) {\n    const pth = nightly[platform as keyof typeof nightly]();\n    if (pth) {\n      return pth;\n    }\n  }\n}\n\nexport function getAnyFirefoxStable(): string {\n  const firefox = getFirefoxPath();\n  if (firefox) {\n    return firefox;\n  }\n\n  const dev = getFirefoxDevPath();\n  if (dev) {\n    return dev;\n  }\n\n  const canary = getFirefoxNightlyPath();\n  if (canary) {\n    return canary;\n  }\n\n  const error = new Error('Unable to find any firefox browser.');\n  error.name = 'FirefoxPathsError';\n  throw error;\n}\n"],"names":["platform","process","getFirefoxOnLinux","name","path","which","e","getFirefoxOnWindows","suffix","sep","prefixes","Boolean","prefix","firefoxPath","join","existsSync","getFireFoxOnDarwin","item","undefined","firefoxPaths","getFirefoxPath","firefox","Object","pth","getFirefoxDevPath","dev","getFirefoxNightlyPath","nightly","getAnyFirefoxStable","canary","error","Error"],"mappings":";;;;;;;AAYA,MAAMA,WAAWC,QAAQ,QAAQ;AAEjC,SAASC,kBAAkBC,IAAe;IACxC,IAAI;QACF,MAAMC,OAAOC,iCAAAA,CAAAA,UAAAA,CAAAA,IAAU,CAACF;QACxB,OAAOC;IACT,EAAE,OAAOE,GAAG,CAAC;IAEb,OAAO;AACT;AAEA,SAASC,oBACPJ,IAAyE;IAEzE,MAAMK,SAAS,GAAGC,iCAAAA,GAAGA,GAAGN,OAAOM,iCAAAA,GAAGA,CAAC,WAAW,CAAC;IAE/C,MAAMC,WAAW;QACfT,QAAQ,GAAG,CAAC,YAAY;QACxBA,QAAQ,GAAG,CAAC,YAAY;QACxBA,QAAQ,GAAG,CAAC,oBAAoB;KACjC,CAAC,MAAM,CAACU;IAET,KAAK,MAAMC,UAAUF,SAAU;QAC7B,MAAMG,cAAcC,AAAAA,IAAAA,iCAAAA,IAAAA,AAAAA,EAAKF,QAASJ;QAClC,IAAIO,AAAAA,IAAAA,+BAAAA,UAAAA,AAAAA,EAAWF,cACb,OAAOA;IAEX;IAEA,OAAO;AACT;AAEA,SAASG,mBACPb,IAAiE;IAEjE,MAAMK,SAAS,CAAC,cAAc,EAAEL,KAAK,2BAA2B,CAAC;IACjE,MAAMO,WAAW;QAAC;QAAIT,QAAQ,GAAG,CAAC,IAAI;KAAC,CAAC,MAAM,CAAC,CAACgB,OAASA,AAASC,KAAAA,MAATD;IAEzD,KAAK,MAAML,UAAUF,SAAU;QAC7B,MAAMG,cAAcC,AAAAA,IAAAA,iCAAAA,IAAAA,AAAAA,EAAKF,QAAQJ;QACjC,IAAIO,AAAAA,IAAAA,+BAAAA,UAAAA,AAAAA,EAAWF,cACb,OAAOA;IAEX;IAEA,OAAO;AACT;AAEA,MAAMM,eAAe;IACnB,SAAS;QACP,OAAO,IAAMjB,kBAAkB;QAC/B,QAAQ,IAAMc,mBAAmB;QACjC,OAAO,IAAMT,oBAAoB;IACnC;IAEA,KAAK;QACH,QAAQ,IAAMS,mBAAmB;QACjC,OAAO,IAAMT,oBAAoB;IACnC;IACA,SAAS;QACP,QAAQ,IAAMS,mBAAmB;QACjC,OAAO,IAAMT,oBAAoB;IACnC;AACF;AAEA,SAASa;IACP,MAAMC,UAAUF,aAAa,OAAO;IAEpC,IAAInB,YAAYsB,OAAO,IAAI,CAACD,SAAS,QAAQ,CAACrB,WAAW;QACvD,MAAMuB,MAAMF,OAAO,CAACrB,SAAiC;QACrD,IAAIuB,KACF,OAAOA;IAEX;AACF;AAEA,SAASC;IACP,MAAMC,MAAMN,aAAa,GAAG;IAE5B,IAAInB,YAAYsB,OAAO,IAAI,CAACG,KAAK,QAAQ,CAACzB,WAAW;QACnD,MAAMuB,MAAME,GAAG,CAACzB,SAA6B;QAC7C,IAAIuB,KACF,OAAOA;IAEX;AACF;AAEA,SAASG;IACP,MAAMC,UAAUR,aAAa,OAAO;IAEpC,IAAInB,YAAYsB,OAAO,IAAI,CAACK,SAAS,QAAQ,CAAC3B,WAAW;QACvD,MAAMuB,MAAMI,OAAO,CAAC3B,SAAiC;QACrD,IAAIuB,KACF,OAAOA;IAEX;AACF;AAEO,SAASK;IACd,MAAMP,UAAUD;IAChB,IAAIC,SACF,OAAOA;IAGT,MAAMI,MAAMD;IACZ,IAAIC,KACF,OAAOA;IAGT,MAAMI,SAASH;IACf,IAAIG,QACF,OAAOA;IAGT,MAAMC,QAAQ,IAAIC,MAAM;IACxBD,MAAM,IAAI,GAAG;IACb,MAAMA;AACR"}