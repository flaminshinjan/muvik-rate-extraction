{"version":3,"file":"local-browser.js","sources":["webpack://@agent-infra/browser/./src/local-browser.ts"],"sourcesContent":["/*\n * Copyright (c) 2025 Bytedance, Inc. and its affiliates.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as puppeteer from 'puppeteer-core';\nimport { BrowserFinder } from './browser-finder';\nimport { BaseBrowser } from './base-browser';\n\nimport type { BrowserType, LaunchOptions } from './types';\n\n/**\n * LocalBrowser class for controlling locally installed browsers\n * Extends the BaseBrowser with functionality specific to managing local browser instances\n * @extends BaseBrowser\n */\nexport class LocalBrowser extends BaseBrowser {\n  /**\n   * Launches a local browser instance with specified options\n   * Automatically detects installed browsers if no executable path is provided\n   * @param {LaunchOptions} options - Configuration options for launching the browser\n   * @returns {Promise<void>} Promise that resolves when the browser is successfully launched\n   * @throws {Error} If the browser cannot be launched\n   */\n  async launch(options: LaunchOptions = {}): Promise<void> {\n    this.logger.info('Launching browser with options:', options);\n\n    const { path, type } = this.getBrowserInfo(options);\n    const viewportWidth = options?.defaultViewport?.width ?? 1280;\n    const viewportHeight = options?.defaultViewport?.height ?? 800;\n\n    const puppeteerLaunchOptions: puppeteer.LaunchOptions = {\n      browser: type,\n      executablePath: path,\n      dumpio: options?.dumpio ?? false,\n      headless: options?.headless ?? false,\n      defaultViewport: {\n        width: viewportWidth,\n        height: viewportHeight,\n        // Setting this value to 0 will reset this value to the system default.\n        // This parameter combined with `captureBeyondViewport: false`, will resolve the screenshot blinking issue.\n        deviceScaleFactor: 0,\n      },\n      ...(options.userDataDir && {\n        userDataDir: options.userDataDir,\n      }),\n      args: [\n        '--no-sandbox',\n        '--mute-audio',\n        '--disable-gpu',\n        '--disable-http2',\n        '--disable-blink-features=AutomationControlled',\n        '--disable-infobars',\n        '--disable-background-timer-throttling',\n        '--disable-popup-blocking',\n        '--disable-backgrounding-occluded-windows',\n        '--disable-renderer-backgrounding',\n        '--disable-window-activation',\n        '--disable-focus-on-load',\n        '--no-default-browser-check', // disable default browser check\n        '--disable-web-security', // disable CORS\n        '--disable-features=IsolateOrigins,site-per-process',\n        '--disable-site-isolation-trials',\n        `--window-size=${viewportWidth},${viewportHeight + 90}`,\n        options?.proxy ? `--proxy-server=${options.proxy}` : '',\n        options?.proxyBypassList\n          ? `--proxy-bypass-list=${options.proxyBypassList}`\n          : '',\n        options?.profilePath\n          ? `--profile-directory=${options.profilePath}`\n          : '',\n        ...(options.args ?? []),\n      ].filter((item) => {\n        if (type === 'firefox') {\n          // firefox not support rules\n          if (\n            item === '--disable-features=IsolateOrigins,site-per-process' ||\n            item === `--window-size=${viewportWidth},${viewportHeight + 90}`\n          ) {\n            return false;\n          }\n\n          return !!item;\n        }\n\n        // chrome/edge\n        return !!item;\n      }),\n      ignoreDefaultArgs: ['--enable-automation'],\n      timeout: options.timeout ?? 0,\n      downloadBehavior: {\n        policy: 'deny',\n      },\n    };\n\n    this.logger.info('Launch options:', puppeteerLaunchOptions);\n\n    try {\n      this.browser = await puppeteer.launch(puppeteerLaunchOptions);\n      await this.setupPageListener();\n      this.logger.success('Browser launched successfully');\n    } catch (error) {\n      this.logger.error('Failed to launch browser:', error);\n      throw error;\n    }\n  }\n\n  private getBrowserInfo(options: LaunchOptions = {}) {\n    // pptr only support 'chrome' and 'firefox'\n    const map: Record<BrowserType, Exclude<BrowserType, 'edge'>> = {\n      chrome: 'chrome',\n      edge: 'chrome',\n      firefox: 'firefox',\n    };\n\n    let browserPath = options.executablePath;\n    let browserType = options.browserType && map[options.browserType];\n\n    if (!browserPath) {\n      const browserInfo = new BrowserFinder(this.logger).findBrowser();\n      browserPath = browserInfo.path;\n      browserType = map[browserInfo.type];\n    } else {\n      if (!browserType) {\n        const lowercasePath = browserPath.toLowerCase();\n\n        if (lowercasePath.includes('chrome')) {\n          browserType = 'chrome';\n        } else if (lowercasePath.includes('edge')) {\n          browserType = 'chrome'; // pptr only support 'chrome' and 'firefox'\n        } else if (lowercasePath.includes('firefox')) {\n          browserType = 'firefox';\n        } else {\n          browserType = 'chrome';\n        }\n      }\n    }\n\n    this.logger.info('Using executable path:', browserPath);\n\n    return {\n      path: browserPath,\n      type: browserType,\n    };\n  }\n}\n"],"names":["LocalBrowser","BaseBrowser","options","_options_defaultViewport","_options_defaultViewport1","path","type","viewportWidth","viewportHeight","puppeteerLaunchOptions","item","puppeteer","error","map","browserPath","browserType","lowercasePath","browserInfo","BrowserFinder"],"mappings":"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"}