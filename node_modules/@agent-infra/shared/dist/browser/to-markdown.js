/**
* Copyright (c) 2025 Bytedance, Inc. and its affiliates.
* SPDX-License-Identifier: Apache-2.0
*/
"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.n = (module)=>{
        var getter = module && module.__esModule ? ()=>module['default'] : ()=>module;
        __webpack_require__.d(getter, {
            a: getter
        });
        return getter;
    };
})();
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    toMarkdown: ()=>toMarkdown
});
const external_turndown_namespaceObject = require("turndown");
var external_turndown_default = /*#__PURE__*/ __webpack_require__.n(external_turndown_namespaceObject);
const external_turndown_plugin_gfm_namespaceObject = require("turndown-plugin-gfm");
function toMarkdown(html, options = {}) {
    if (!html) return '';
    try {
        const { codeBlockStyle = 'fenced', headingStyle = 'atx', emDelimiter = '*', strongDelimiter = '**', gfmExtension = true, removeTags = [
            "script",
            'style',
            'link'
        ] } = options;
        const turndown = new (external_turndown_default())({
            codeBlockStyle,
            headingStyle,
            emDelimiter,
            strongDelimiter
        });
        turndown.remove(removeTags);
        if (gfmExtension) turndown.use(external_turndown_plugin_gfm_namespaceObject.gfm);
        return turndown.turndown(html);
    } catch (error) {
        console.error('HTML to Markdown conversion failed:', error);
        return html;
    }
}
var __webpack_export_target__ = exports;
for(var __webpack_i__ in __webpack_exports__)__webpack_export_target__[__webpack_i__] = __webpack_exports__[__webpack_i__];
if (__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, '__esModule', {
    value: true
});

//# sourceMappingURL=to-markdown.js.map