{"version":3,"file":"agent/Message.js","sources":["webpack://@agent-infra/shared/./src/agent/Message.ts"],"sourcesContent":["/*\n * Copyright (c) 2025 Bytedance, Inc. and its affiliates.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Agent execution states\n */\nexport enum AgentState {\n  IDLE = 'IDLE',\n  RUNNING = 'RUNNING',\n  FINISHED = 'FINISHED',\n  ERROR = 'ERROR',\n}\n\nexport interface Function {\n  name: string;\n  arguments: string;\n}\n\nexport interface ToolCall {\n  id: string;\n  type: string;\n  function: Function;\n}\n\nexport type MessageRole = 'system' | 'user' | 'assistant' | 'tool';\n\nexport interface MessageData {\n  role: MessageRole;\n  content?: string | null;\n  tool_calls?: ToolCall[];\n  name?: string;\n  tool_call_id?: string;\n}\n\n/**\n * Represents a chat message in the conversation\n */\nexport class Message {\n  readonly role: MessageRole;\n  readonly content: string | null;\n  readonly tool_calls?: ToolCall[];\n  readonly name?: string;\n  readonly tool_call_id?: string;\n\n  constructor({\n    role,\n    content = null,\n\n    tool_calls,\n    name,\n    tool_call_id,\n  }: MessageData) {\n    this.role = role;\n    this.content = content;\n    this.tool_calls = tool_calls;\n    this.name = name;\n    this.tool_call_id = tool_call_id;\n  }\n\n  /**\n   * Serialize message to a plain object\n   */\n  toJSON(): MessageData {\n    const data: MessageData = { role: this.role };\n\n    if (this.content !== null) {\n      data.content = this.content;\n    }\n\n    if (this.tool_calls) {\n      data.tool_calls = this.tool_calls;\n    }\n\n    if (this.name) {\n      data.name = this.name;\n    }\n\n    if (this.tool_call_id) {\n      data.tool_call_id = this.tool_call_id;\n    }\n\n    return data;\n  }\n\n  /**\n   * Convert message to dictionary format\n   */\n  toObject(): Record<string, any> {\n    const message: Record<string, any> = { role: this.role };\n\n    if (this.content !== null) {\n      message.content = this.content;\n    }\n\n    if (this.tool_calls !== undefined) {\n      message.tool_calls = this.tool_calls;\n    }\n\n    if (this.name !== undefined) {\n      message.name = this.name;\n    }\n\n    if (this.tool_call_id !== undefined) {\n      message.tool_call_id = this.tool_call_id;\n    }\n\n    return message;\n  }\n\n  /**\n   * Create a user message\n   */\n  static userMessage(content: string): Message {\n    return new Message({ role: 'user', content });\n  }\n\n  /**\n   * Create a system message\n   */\n  static systemMessage(content: string): Message {\n    return new Message({ role: 'system', content });\n  }\n\n  /**\n   * Create an assistant message\n   */\n  static assistantMessage(content: string | null = null): Message {\n    return new Message({ role: 'assistant', content });\n  }\n\n  /**\n   * Create a tool message\n   */\n  static toolMessage(\n    content: string,\n    name: string,\n    tool_call_id: string,\n  ): Message {\n    return new Message({ role: 'tool', content, name, tool_call_id });\n  }\n\n  /**\n   * Create ToolCallsMessage from raw tool calls\n   */\n  static fromToolCalls(\n    tool_calls: ToolCall[],\n    content: string = '',\n    kwargs: Record<string, any> = {},\n  ): Message {\n    const formattedCalls = tool_calls.map((call) => ({\n      id: call.id,\n      function: call.function,\n      type: 'function',\n    }));\n\n    return new Message({\n      role: 'assistant',\n      content,\n      tool_calls: formattedCalls,\n      ...kwargs,\n    });\n  }\n\n  /**\n   * Convert message instance to plain object for IPC transfer\n   */\n  static toTransferableData(message: Message): MessageData {\n    return {\n      role: message.role,\n      content: message.content,\n      tool_calls: message.tool_calls,\n      name: message.name,\n      tool_call_id: message.tool_call_id,\n    };\n  }\n\n  /**\n   * Create Message instance from transferable data\n   */\n  static fromTransferableData(data: MessageData): Message {\n    return new Message(data);\n  }\n}\n"],"names":["AgentState","Message","data","message","undefined","content","name","tool_call_id","tool_calls","kwargs","formattedCalls","call","role"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOC;;;;;;;;;;AACM,IAAKA,aAAAA,WAAAA,GAAAA,SAAAA,UAAU;;;;;WAAVA;;AA+BL,MAAMC;IAyBX,SAAsB;QACpB,MAAMC,OAAoB;YAAE,MAAM,IAAI,CAAC,IAAI;QAAC;QAE5C,IAAI,AAAiB,SAAjB,IAAI,CAAC,OAAO,EACdA,KAAK,OAAO,GAAG,IAAI,CAAC,OAAO;QAG7B,IAAI,IAAI,CAAC,UAAU,EACjBA,KAAK,UAAU,GAAG,IAAI,CAAC,UAAU;QAGnC,IAAI,IAAI,CAAC,IAAI,EACXA,KAAK,IAAI,GAAG,IAAI,CAAC,IAAI;QAGvB,IAAI,IAAI,CAAC,YAAY,EACnBA,KAAK,YAAY,GAAG,IAAI,CAAC,YAAY;QAGvC,OAAOA;IACT;IAKA,WAAgC;QAC9B,MAAMC,UAA+B;YAAE,MAAM,IAAI,CAAC,IAAI;QAAC;QAEvD,IAAI,AAAiB,SAAjB,IAAI,CAAC,OAAO,EACdA,QAAQ,OAAO,GAAG,IAAI,CAAC,OAAO;QAGhC,IAAI,AAAoBC,KAAAA,MAApB,IAAI,CAAC,UAAU,EACjBD,QAAQ,UAAU,GAAG,IAAI,CAAC,UAAU;QAGtC,IAAI,AAAcC,KAAAA,MAAd,IAAI,CAAC,IAAI,EACXD,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI;QAG1B,IAAI,AAAsBC,KAAAA,MAAtB,IAAI,CAAC,YAAY,EACnBD,QAAQ,YAAY,GAAG,IAAI,CAAC,YAAY;QAG1C,OAAOA;IACT;IAKA,OAAO,YAAYE,OAAe,EAAW;QAC3C,OAAO,IAAIJ,QAAQ;YAAE,MAAM;YAAQI;QAAQ;IAC7C;IAKA,OAAO,cAAcA,OAAe,EAAW;QAC7C,OAAO,IAAIJ,QAAQ;YAAE,MAAM;YAAUI;QAAQ;IAC/C;IAKA,OAAO,iBAAiBA,UAAyB,IAAI,EAAW;QAC9D,OAAO,IAAIJ,QAAQ;YAAE,MAAM;YAAaI;QAAQ;IAClD;IAKA,OAAO,YACLA,OAAe,EACfC,IAAY,EACZC,YAAoB,EACX;QACT,OAAO,IAAIN,QAAQ;YAAE,MAAM;YAAQI;YAASC;YAAMC;QAAa;IACjE;IAKA,OAAO,cACLC,UAAsB,EACtBH,UAAkB,EAAE,EACpBI,SAA8B,CAAC,CAAC,EACvB;QACT,MAAMC,iBAAiBF,WAAW,GAAG,CAAC,CAACG,OAAU;gBAC/C,IAAIA,KAAK,EAAE;gBACX,UAAUA,KAAK,QAAQ;gBACvB,MAAM;YACR;QAEA,OAAO,IAAIV,QAAQ;YACjB,MAAM;YACNI;YACA,YAAYK;YACZ,GAAGD,MAAM;QACX;IACF;IAKA,OAAO,mBAAmBN,OAAgB,EAAe;QACvD,OAAO;YACL,MAAMA,QAAQ,IAAI;YAClB,SAASA,QAAQ,OAAO;YACxB,YAAYA,QAAQ,UAAU;YAC9B,MAAMA,QAAQ,IAAI;YAClB,cAAcA,QAAQ,YAAY;QACpC;IACF;IAKA,OAAO,qBAAqBD,IAAiB,EAAW;QACtD,OAAO,IAAID,QAAQC;IACrB;IAzIA,YAAY,EACVU,IAAI,EACJP,UAAU,IAAI,EAEdG,UAAU,EACVF,IAAI,EACJC,YAAY,EACA,CAAE;QAbhB,uBAAS,QAAT;QACA,uBAAS,WAAT;QACA,uBAAS,cAAT;QACA,uBAAS,QAAT;QACA,uBAAS,gBAAT;QAUE,IAAI,CAAC,IAAI,GAAGK;QACZ,IAAI,CAAC,OAAO,GAAGP;QACf,IAAI,CAAC,UAAU,GAAGG;QAClB,IAAI,CAAC,IAAI,GAAGF;QACZ,IAAI,CAAC,YAAY,GAAGC;IACtB;AA6HF"}