{"version":3,"file":"agent/Memory.mjs","sources":["webpack://@agent-infra/shared/./src/agent/Memory.ts"],"sourcesContent":["/*\n * Copyright (c) 2025 Bytedance, Inc. and its affiliates.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Message, MessageData } from './Message';\n\n/**\n * Memory system for managing conversation history\n */\nexport class Memory {\n  private messages: Message[];\n  private readonly maxMessages: number;\n\n  constructor(messages: Message[] = [], maxMessages: number = 100) {\n    this.messages = messages;\n\n    this.maxMessages = maxMessages;\n  }\n\n  /**\n   * Get all messages in the memory\n   */\n  getMessages(): readonly Message[] {\n    return this.messages;\n  }\n\n  /**\n   * Add a message to memory\n   */\n  addMessage(message: Message): void {\n    this.messages.push(message);\n\n    // Optional: Implement message limit\n\n    if (this.messages.length > this.maxMessages) {\n      this.messages = this.messages.slice(-this.maxMessages);\n    }\n  }\n\n  /**\n   * Add multiple messages to memory\n   */\n  addMessages(messages: Message[]): void {\n    this.messages.push(...messages);\n  }\n\n  /**\n   * Clear all messages\n   */\n  clear(): void {\n    this.messages = [];\n  }\n\n  /**\n   * Get n most recent messages\n   */\n  getRecentMessages(n: number): Message[] {\n    return this.messages.slice(-n);\n  }\n\n  /**\n   * Convert messages to list of objects\n   */\n  normalize(): Record<string, any>[] {\n    return this.messages.map((msg) => msg.toObject());\n  }\n\n  /**\n   * Serialize messages to plain objects\n   */\n  toJSON(): MessageData[] {\n    return this.messages.map((msg) => msg.toJSON());\n  }\n}\n"],"names":["Memory","message","messages","n","msg","maxMessages"],"mappings":";;;;AAGC;;;;;;;;;;AAOM,MAAMA;IAaX,cAAkC;QAChC,OAAO,IAAI,CAAC,QAAQ;IACtB;IAKA,WAAWC,OAAgB,EAAQ;QACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAACA;QAInB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW;IAEzD;IAKA,YAAYC,QAAmB,EAAQ;QACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAIA;IACxB;IAKA,QAAc;QACZ,IAAI,CAAC,QAAQ,GAAG,EAAE;IACpB;IAKA,kBAAkBC,CAAS,EAAa;QACtC,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAACA;IAC9B;IAKA,YAAmC;QACjC,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAACC,MAAQA,IAAI,QAAQ;IAChD;IAKA,SAAwB;QACtB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAACA,MAAQA,IAAI,MAAM;IAC9C;IA3DA,YAAYF,WAAsB,EAAE,EAAEG,cAAsB,GAAG,CAAE;QAHjE,uBAAQ,YAAR;QACA,uBAAiB,eAAjB;QAGE,IAAI,CAAC,QAAQ,GAAGH;QAEhB,IAAI,CAAC,WAAW,GAAGG;IACrB;AAwDF"}